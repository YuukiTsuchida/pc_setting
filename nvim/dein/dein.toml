[[plugins]]
repo = 'altercation/vim-colors-solarized'
hook_add = '''
colorscheme solarized
set background=dark
let g:solarized_termcolors=256
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
call denite#custom#var('file_rec', 'command',['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])

call denite#custom#var('grep', 'command', ['ag'])
call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', [])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])

function! DeniteFileCreate(path)
   call denite#start([{'name': 'file', 'args': ['new', a:path]}])
endfunction
command! -nargs=* DeniteFileNew call DeniteFileCreate(<f-args>)
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#auto_complete_start_length = 1
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:ale_linters = {
    \   'javascript': ['eslint'],
    \   'python': ['flake8'],
    \   'cs': ['OmniSharp'],
    \   'c': ['clangd'],
    \   'cpp': ['clangd']
    \ }

let g:ale_fixers = {
      \ 'javascript': ['prettier'],
      \ 'python': ['autopep8', 'isort'],
      \ 'markdown': [
      \   {buffer, lines -> {'command': 'textlint -c ~/.config/textlintrc -o /dev/null --fix --no-color --quiet %t', 'read_temporary_file': 1}}
      \   ],
      \ 'cpp': ['clang-format']
      \ }

" 各ツールの実行オプションを変更してPythonパスを固定
let g:ale_python_flake8_executable = g:python3_host_prog
let g:ale_python_flake8_options = '-m flake8'
let g:ale_python_autopep8_executable = g:python3_host_prog
let g:ale_python_autopep8_options = '-m autopep8'
let g:ale_python_isort_executable = g:python3_host_prog
let g:ale_python_isort_options = '-m isort'
let g:ale_python_black_executable = g:python3_host_prog
let g:ale_python_black_options = '-m black'

" 保存ときのフォーマット
let g:ale_fix_on_save = 1
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']

" ロケーションリストの代わりにQuickFixを使用する
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1

" エラーと警告の一覧を見るためにウィンドウを開いておく
let g:ale_open_list = 1

" シンボルカラムを表示したままにする
let g:ale_sign_column_always = 1
" 補完してくれる
let g:ale_completion_enabled = 1

" エラー行に表示するマーク
let g:ale_sign_error = '⨉'
let g:ale_sign_warning = '⚠'
'''


[[plugins]]
repo = 'kien/ctrlp.vim'
hook_add = '''
if executable('ag')
  let g:ctrlp_use_caching = 0
  let g:ctrlp_user_command = 'ag %s -i --nocolor --nogroup -g ""'
endif
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
'''

[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'gregsexton/gitv'

[[plugins]]
repo = 'idanarye/vim-merginal'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
nnoremap <F9> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup=1
let g:indent_guides_color_change_percent=30
let g:indent_guides_guide_size=1
let g:indent_guides_start_level=2
let g:solarized_termtrans = 1
"hi IndentGuidesOdd  ctermbg=black
"hi IndentGuidesEven ctermbg=darkgrey
hi IndentGuidesOdd  guibg=red   ctermbg=3
hi IndentGuidesEven guibg=green ctermbg=4
'''

[[plugins]]
repo = 'AndrewRadev/switch.vim'
hook_add = '''
nnoremap - :Switch<cr>
'''

[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
" \sc でカーソル行をコメントアウトor解除
nmap \sc <Plug>(caw:I:toggle)
vmap \sc <Plug>(caw:I:toggle)
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'ozelentok/denite-gtags'
hook_add = '''
'''

[[plugins]]
repo = 'mbbill/undotree'
hook_add = '''
let g:undotree_WindowLayout = 2
nnoremap <F8> :UndotreeToggle<CR>
'''

